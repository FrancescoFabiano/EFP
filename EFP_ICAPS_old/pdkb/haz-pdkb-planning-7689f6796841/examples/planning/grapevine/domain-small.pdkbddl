
(define (domain grapevine)

    (:agents a b c)
    (:types loc)
    (:constants )

    (:predicates
            (secret ?agent)
        {AK}(at ?agent - agent ?l - loc)
        {AK}(connected ?l1 ?l2 - loc)
    )

    (:action move
        :derive-condition   always
        :parameters         (?a - agent ?l1 ?l2 - loc)
        :precondition       (and (at ?a ?l1) (connected ?l1 ?l2))
        :effect             (and (at ?a ?l2) (!at ?a ?l1))
    )

    (:action share
        :derive-condition   (at $agent$ ?l)
        :parameters         (?a ?as - agent ?l - loc)
        :precondition       (and (at ?a ?l) [?a](secret ?as))
        :effect             (and
                                (forall ?a2 - agent
                                    (when     (at ?a2 ?l)
                                         [?a2](secret ?as)))
                            )
    )
)
